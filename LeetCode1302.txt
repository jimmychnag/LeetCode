/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
int max(int a, int b){//find max value
    return (a > b) ? a : b;
}

int Depth(struct TreeNode* root ,int *depth){

    if(root == NULL) return 0;

    int left = Depth(root->left,depth);//find left depth
    int right = Depth(root->right,depth);//find right  depth

    return max(left,right)+1;
}

void Traversal(struct TreeNode* root, int *result, int level,int *max_depth) {
    if (root == NULL) return;//if empty then return

    if (level == *max_depth) {//if in deepest level then add value to result
        //printf("%d\n", root->val);
        *result += root->val;
    }

    Traversal(root->left, result, level + 1,max_depth);
    Traversal(root->right, result, level + 1,max_depth);
}

int deepestLeavesSum(struct TreeNode* root) {
    int depth = 0;
    int l = 0 ;
    int result = 0;
    int max_depth = Depth(root,&depth);
    
    Traversal(root,&result,1,&max_depth);

    return result;
}